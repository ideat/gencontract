<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace = "mindware.com.mappers.ContractMapper">

    <resultMap type="contract" id="ContractResult">
        <id 	property="contractId" column="contract_id"/>
        <result property="loanDataId" column="loan_data_id"/>
        <result property="description" column="description"/>
        <result property="document" column="document" jdbcType="BINARY"/>
        <result property="dateContract" column="date_contract" />
        <result property="fileNameContract" column="file_name_contract"/>
        <association property="loanData" column="loan_data_id" javaType="loandata" resultMap="LoanDataResult" />
    </resultMap>

    <resultMap type="loandata" id="LoanDataResult">
        <id property="loanDataId" column="loan_data_id"/>
        <result property="branchOfficeId" column="branch_office_id"/>
        <result property="loanNumber" column="loan_number"/>
        <result property="loanDate" column="loan_date"/>
        <result property="currency" column="currency"/>
        <result property="loanMount" column="loan_mount"/>
        <result property="loanTerm" column="loan_term"/>
        <result property="interestRate"  column="interest_rate"/>
        <result property="treRate" column="tre_rate"/>
        <result property="teacRate" column="teac_rate"/>
        <result property="feePayment" column="fee_payment"/>
        <result property="paymentFrecuency" column="payment_frecuency"/>
        <result property="creditLifeInsurance" column="credit_life_insurance"/>
        <result property="totalPayment" column="total_payment"/>
        <result property="loanDestination" column="loan_destination"/>
        <result property="agency" column="agency"/>
        <result property="official" column="official"/>
        <result property="debtorName" column="debtor_name"/>
        <result property="identityCardDebtor" column="identity_card_debtor"/>
        <result property="addressDebtor" column="address_debtor"/>
        <result property="civilStatusDebtor" column="civil_status_debtor"/>
        <result property="genderDebtor" column="gender_debtor"/>
        <result property="clientLoanId" column="client_loan_id"/>
        <result property="fixedPaymentDay" column="fixed_payment_day"/>
        <result property="coDebtors" column="co_debtors"/>
        <result	property="guarantors" column="guarantors"/>
        <result property="warranty" column="warranty"/>
        <result property="extraData" column="extra_data"/>
        <association property="branchOffice" column="branch_office_id" javaType="branchoffice" resultMap="BranchOfficeResult" />
    </resultMap>

    <resultMap type="branchoffice" id="BranchOfficeResult">
        <id 	property="branchOfficeId" column="branch_office_id"/>
        <result property="branchName" column="branch_name"/>
        <result property="cityName" column="city_name"/>
        <result property="provinceName" column="province_name"/>
        <result property="address" column="address"/>
        <result property="signatories" column="signatories" />
    </resultMap>


    <select id="findAllContract" resultMap="ContractResult">
        select c.*, ld.debtor_name, ld.loan_number, ld.loan_mount, ld.currency, bo.branch_office_id
        from contract c
        inner join loan_data ld on (ld.loan_data_id = c.loan_data_id)
        inner join branch_office bo on (ld.branch_office_id = bo.branch_office_id)
        order by c.date_contract
    </select>

    <select id="findAllContractByBranch" resultMap="ContractResult">
        select c.*, ld.debtor_name, ld.loan_number, ld.loan_mount, ld.currency, bo.branch_office_id
        from contract c
        inner join loan_data ld on (ld.loan_data_id = c.loan_data_id)
        inner join branch_office bo on (ld.branch_office_id = bo.branch_office_id)
        where ld.branch_office_id in
        <foreach item="item" index="index" collection="branchOfficeList"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
        order by c.date_contract
    </select>

    <select id="findContractByLoanNumber" resultMap="ContractResult" parameterType="int">
        select c.*, ld.debtor_name
        from contract c
        inner join loan_data ld on (ld.loan_data_id = c.loan_data_id)
        where ld.loan_number = #{loanNumber}

    </select>

    <select id="findCotractByDebtorName" resultMap="ContractResult" parameterType="string">
        select c.*, ld.debtor_name
        from contract c
        inner join loan_data ld on (ld.loan_data_id = c.loan_data_id)
        where ld.debtor_name like #{debtorName}
        order by c.contract_id

    </select>

    <insert id="insertContract"  parameterType="contract" keyProperty="contractId" >
        <selectKey keyProperty="contractId" resultType="int" order="BEFORE">
            select nextval('contract_id_seq')
        </selectKey>
        insert into contract (
        contract_id,
        loan_data_id,
        description,
        document,
        date_contract,
        file_name_contract)
        values (
        #{contractId},
        #{loanDataId},
        #{description},
        #{document},
        #{dateContract},
        #{fileNameContract}
        )

    </insert>

    <update id="updateContract" parameterType="contract">
        update contract
        set
        description = #{description},
        document = #{document},
        date_contract = #{dateContract},
        file_name_contract = #{fileNameContract}
        where contract_id = #{contractId}
    </update>

    <update id="updateStateContract" parameterType="contract">
        update contract
        set
        state = #{state}
        where contract_id = #{contractId}
    </update>

</mapper>